export { cmykToRgb } from './cmykToRgb';
export { expandHexShorthand } from './expandHexShorthand';
export { whichModel } from './whichModel';
export { hexToRgb } from './hexToRgb';
export { hslToRgb } from './hslToRgb';
export { hsvToRgb } from './hsvToRgb';
export { isHexShorthand } from './isHexShorthand';
export { mix } from './mix';
export { parseCmyk } from './parseCmyk';
export { parseHex } from './parseHex';
export { parseHsl } from './parseHsl';
export { parseHsv } from './parseHsv';
export { parseRgb } from './parseRgb';
export { rgbToCmyk } from './rgbToCmyk';
export { rgbToHex } from './rgbToHex';
export { rgbToHsl } from './rgbToHsl';
export { rgbToHsv } from './rgbToHsv';
export { toCmyk } from './toCmyk';
export { toHex } from './toHex';
export { toHsl } from './toHsl';
export { toHsv } from './toHsv';
export { toRgb } from './toRgb';
export { randomCmyk } from './randomCmyk';
export { randomHsl } from './randomHsl';
export { randomHsv } from './randomHsv';
export { randomRgb } from './randomRgb';
export { randomHex } from './randomHex';
export { isValidRgb } from './isValidRgb';
export { isValidHex } from './isValidHex';
export { isValidHsl } from './isValidHsl';
export { isValidHsv } from './isValidHsv';
export { isValidCmyk } from './isValidCmyk';
export { formatRgb } from './formatRgb';
export { formatHex } from './formatHex';
export { formatHsl } from './formatHsl';
export { formatHsv } from './formatHsv';
export { formatCmyk } from './formatCmyk';
export { contrastInfo } from './contrastInfo';
export { relativeLuminance} from './relativeLuminance';
export { isDark } from './isDark';
export { hexFromName } from './hexFromName';
export { hexToName } from './hexToName';
export { CSS_COLORS } from './data';

// Simple composition util
export const compose = (...fns: Function[]) => (x: any) => fns.reduceRight((y, f) => f(y), x);

export const version = '__VERSION__';
